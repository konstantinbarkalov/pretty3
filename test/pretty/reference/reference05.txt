{ }  · 25 entries
 ├─╴ 666: with number key
 ├─╴ 777: with number key too
 ├─╴ simpleText: Hello my friend!
 ├─╴ <T> objectedText: Friend of mine, hello.
 ├─╴ <D> maynardBirthDate: 17.04.1964, 07:00:00
 ├─╴ <S> someSymbol: Symbol(Fortune)
 ├─╴ longText: GitHub is home to over 40 million developers working together to 
 │   host and review code, manage projects, and build software together. Since q
 │   uestion was regarding clunkiness of property checking, and one regular usec
 │   ase for that being validation of function argument options objects, thought
 │    I'd mention a library-free short way of testing existence of multiple prop
 │   erties. Disclaimer: It does require ECMAScript 5 (but IMO anyone still usin
 │   g IE8 deserves a broken web).
 ├─╴ {M} capitalCityMap: [object Map] · 2 entries
 │    ├─╴ Canada: Ottawa
 │    ╰─╴ Iceland: Reykjavík
 ├─╴ [ ] regularArray:  · 5 entries
 │    ├─╸ 0: 0
 │    ├─╸ 1: 0,25
 │    ├─╸ 2: 0,5
 │    ├─╸ { } 3:  · 1 entries
 │    │    ╰─╴ wow: surprize! there is is an object among numbers
 │    └─╸ 4: 0,75
 ├─╴ [T] powersOfTwoTypedArray: 1,2,4,8,16,32,64,128 · 8 entries
 │    ├─╸ 0: 1
 │    ├─╸ 1: 2
 │    ├─╸ 2: 4
 │    ├─╸ 3: 8
 │    ├─╸ 4: 16
 │    ├─╸ 5: 32
 │    ├─╸ 6: 64
 │    └─╸ 7: 128
 ├─╴ <M> phrasedWeakMap: [object WeakMap]
 ├─╴ [S] jackpotSet: [object Set] · 6 entries
 │    ├─╸ 4: 4
 │    ├─╸ 8: 8
 │    ├─╸ 15: 15
 │    ├─╸ 16: 16
 │    ├─╸ 23: 23
 │    └─╸ 42: 42
 ├─╴ [I] olympicIterable: The olimpic motto is:Citius, Altius, Fortius! · 3 entr
 │    │ ies
 │    ├─╸ 0: Fortius!
 │    ├─╸ 1: Altius
 │    └─╸ 2: Citius
 ├─╴ [ ] longArray:  · 10 shown of 1000 total
 │    ├─╸ 0: 0
 │    ├─╸ 1: 10
 │    ├─╸ 2: 20
 │    ├─╸ 3: 30
 │    ├─╸ 4: 40
 │    ├─╸ 5: 50
 │    ├─╸ 6: 60
 │    ├─╸ 7: 70
 │    ├─╸ 8: 80
 │    ├─╸ 9: 90
 │    └─╸ ...
 ├─╴ [ ] proxiedLongArray:  · 10 shown of 1000 total
 │    ├─╸ 0: 0
 │    ├─╸ 1: 10
 │    ├─╸ 2: 20
 │    ├─╸ 3: 30
 │    ├─╸ 4: 40
 │    ├─╸ 5: 50
 │    ├─╸ 6: 60
 │    ├─╸ 7: 70
 │    ├─╸ 8: 80
 │    ├─╸ 9: 90
 │    └─╸ ...
 ├─╴ {E} funError: RangeError: Pizza size is too big · 1 entries
 │    ╰─╴ stack: stack is cleared for test-passing repeatability
 │        some pre- and post-spaced libes
 │        that are purposed to be trimmed by stack-prettifier
 │        
 ├─╴ longUnbreakebleText: yaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
 │   aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
 │   aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
 │   aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
 │   aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
 │   aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
 │   aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
 │   aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
 │   aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaarrr!
 ├─╴ silence: 
 ├─╴ : with no key
 ├─╴ { } emptyObject:  · 0 entries
 ├─╴ <X> fate: null
 ├─╴ <B> rock: true
 ├─╴ <B> rap: false
 ├─╴ < > whyWeAreHere: undefined
 ╰─╴ { } arbitraryLib:  · 10 shown of 94 total
      ├─╴ <F> appendFile: appendFile
      ├─╴ <F> appendFileSync: appendFileSync
      ├─╴ <F> access: access
      ├─╴ <F> accessSync: accessSync
      ├─╴ <F> chown: chown
      ├─╴ <F> chownSync: chownSync
      ├─╴ <F> chmod: chmod
      ├─╴ <F> chmodSync: chmodSync
      ├─╴ <F> close: close
      ├─╴ <F> closeSync: closeSync
      ╰─╴ ...
